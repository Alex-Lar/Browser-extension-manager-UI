@font-face {
  font-family: 'Noto Sans';
  font-weight: 400;
  src: url(../fonts/static/NotoSans-Regular.ttf);
}

@font-face {
  font-family: 'Noto Sans';
  font-weight: 500;
  src: url(../fonts/static/NotoSans-Medium.ttf);
}

@font-face {
  font-family: 'Noto Sans';
  font-weight: 700;
  src: url(../fonts/static/NotoSans-Bold.ttf);
}

:root {
  /* Neutral colors */
  --neutral-900: hsl(227, 75%, 14%);
  --neutral-800: hsl(226, 25%, 17%);
  --neutral-700: hsl(225, 23%, 24%);
  --neutral-600: hsl(226, 11%, 37%);
  --neutral-300: hsl(0, 0%, 78%);
  --neutral-200: hsl(217, 61%, 90%);
  --neutral-100: hsl(0, 0%, 93%);
  --neutral-0: hsl(200, 60%, 99%);

  /* Red colors */
  --red-400: hsl(3, 86%, 64%);
  --red-500: hsl(3, 71%, 56%);
  --red-700: hsl(3, 77%, 44%);

  /* General */
  --background-gradient: linear-gradient(180deg, #EBF2FC 0%, #EEF8F9 100%);
  --card-bg: var(--neutral-0);
  --box-shadow: 0px 1px 3px 1px var(--neutral-200);

}

.dark-theme {
  --background-gradient: linear-gradient(180deg, #040918 0%, #091540 100%);
  --card-bg: var(--neutral-700);
}

*,
*::after,
*::before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

*:focus {
  outline: 2px solid var(--red-700);
  outline-offset: 2px;
  border-radius: inherit;
}

html {
  font-size: 18px;
}

body {
  font-family: 'Noto Sans';
  background: var(--background-gradient);
  color: var(--neutral-900);
  width: 100%;
  min-width: fit-content;
  height: 100%;
  min-height: 100vh;

  padding: 1.5rem 1rem;
}

h1,
h2,
h3 {
  font-weight: 700;
  font-size: 32px;
}

/* svg */
.svg-logo {
  height: auto;
  width: 179px;
  height: 41px;
}

.svg-logo__logo {
  fill: var(--red-700);
}

.svg-logo__text {
  fill: var(--neutral-900);
}

/* Header */
.header {
  width: 100%;
  height: fit-content;
  margin-bottom: 2rem;
}

.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;

  background-color: var(--neutral-0);
  padding: .5rem .7rem;
  border-radius: .5rem;
  min-width: min-content;
  gap: 1rem;

  box-shadow: var(--box-shadow);
}

.header__logo {
  display: flex;
  align-items: center;
}


.header__theme-toggler {
  display: flex;
  align-items: center;
  justify-content: center;

  padding: .8rem;
  background-color: var(--neutral-100);
  border: none;
  border-radius: .5rem;
}


/* Extensions */
.extensions {
  width: 100%;
  height: auto;
}

.extensions__inner {
  width: inherit;
  height: inherit;

  text-align: center;
}

/* Filters */

.extensions__filters {
  display: flex;
  justify-content: center;
  margin: 1.5rem auto
}

.extensions__filters-group {
  display: flex;
  justify-content: space-between;
  align-items: center;

  width: 100%;
  min-width: min-content;
  max-width: 16rem;
}

.extensions__filters-item {
  position: relative;
  background-color: var(--neutral-0);
  color: var(--neutral-900);
  padding: .5rem 1rem;
  border-radius: 1.9rem;

  box-shadow: var(--box-shadow);
  transition: opacity .1s ease;
}

.extensions__filters-item.active {
  background-color: var(--red-700);
  color: var(--neutral-0);
}

.extensions__filters-item.active:hover {
  opacity: .8;
}

.extensions__filters-item.active:active {
  background-color: var(--red-700);
}

.extensions__filters-item:hover {
  opacity: .8;
}

.extensions__filters-item label {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

  cursor: pointer;
}

.extensions__filters-item input[type="radio"] {
  visibility: hidden;
  position: absolute;
}



.extensions__list {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}


/* Extensions Card */

.extensions__card {
  display: flex;
  flex-wrap: wrap;
  gap: 1.5rem;
  flex: 1 1 350px;

  width: 100%;
  font-size: 1rem;
  background-color: var(--card-bg);
  border-radius: 1rem;
  padding: 1rem;
  box-shadow: var(--box-shadow);
}

.extensions__card-content {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
}

.extensions__text-group {
  display: flex;
  flex-direction: column;
  gap: .3rem;

  text-align: left;
}

.extensions__text-group h2 {
  font-size: 1.2rem;
  color: var(--neutral-900);
  flex-grow: 1;
}

.extensions__text-group p {
  font-size: clamp(.7rem, 5vw, 1rem);
  color: var(--neutral-600);
}

.extensions__card-control {
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-width: 100%;
}

.extensions__card-control button {
  font-family: inherit;
  font-size: .8rem;
  font-weight: 500;
  color: var(--neutral-900);

  background-color: var(--neutral-0);
  padding: .4rem .8rem;
  border: 1px solid var(--neutral-300);
  border-radius: 1.9rem;
  cursor: pointer;

  transition-property: color;
  transition-property: background-color;
  transition-duration: .2s;
  transition-timing-function: ease;
}

.extensions__card-control button:hover {
  background-color: var(--red-700);
  color: var(--neutral-0);
}

/* Custom Checkbox */

.custom-checkbox {
  --checkbox-height: 26px;
  --checkbox-width: calc(var(--checkbox-height)*1.7);
  --checkbox-padding: 4px;
  --checkbox-box-shadow: 0px 0px 2px 0px hsla(226, 11%, 37%, 0.6);
  --checkbox-border-radius: calc(var(--checkbox-height) * 3.14);
  --checkbox-transition: .1s ease;

  position: relative;
  width: var(--checkbox-width);
  height: var(--checkbox-height);
  background-color: var(--neutral-300);
  border-radius: var(--checkbox-border-radius);
  box-shadow: inset var(--checkbox-box-shadow);

  transition-property: background-color;
  transition-property: opacity;
  transition-timing-function: var(--checkbox-transition);
}

.custom-checkbox input {
  visibility: hidden;
  position: absolute;
}

.custom-checkbox label {
  display: flex;
  align-items: center;
  padding: var(--checkbox-padding);

  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

  cursor: pointer;
}

.custom-checkbox:has(input:checked) {
  background-color: var(--red-700);
  transition: background-color var(--checkbox-transition);
}

.custom-checkbox:has(input:checked):hover {
  opacity: .7;
  transition: opacity var(--checkbox-transition);
}

.custom-checkbox label::before {
  --size: calc(var(--checkbox-height) - 2*var(--checkbox-padding));

  content: "";
  display: block;
  background-color: white;
  border-radius: 100%;
  width: var(--size);
  height: var(--size);
  box-shadow: var(--checkbox-box-shadow);
  transform: translateX(0px);
  transition: transform var(--checkbox-transition);
}

.custom-checkbox:has(input:checked) label::before {
  transform: translateX(calc(var(--checkbox-width) - 2*var(--checkbox-padding) - var(--size)));
  transition: transform var(--checkbox-transition);
}